"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-h-2z_0qp9p-e0aq#$uy7t1s_+*^c%$1%qjivui4$t#zx$#(^cb'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = False

if DEBUG:
    ALLOWED_HOSTS = ["*"]
    
    # Database
    # https://docs.djangoproject.com/en/5.1/ref/settings/#databases
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
    
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
else:
    ALLOWED_HOSTS = [
        '62.3.41.209', 'https://server.ir', 'http://server.ir', 'server.ir', "https://62.3.41.209", "http://62.3.41.209"
        'https://www.server.ir', 'http://www.server.ir', 'www.server.ir', "127.0.0.1"
    ]
    # Database
    # https://docs.djangoproject.com/en/5.0/ref/settings/#databases
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.mysql',
    #         'NAME': "",
    #         'USER': "",
    #         'PASSWORD': "",
    #         'HOST': '127.0.0.1',  # Or an IP Address that your DB is hosted on
    #         'PORT': '3306',
    #         'OPTIONS': {
    #             'sql_mode': 'STRICT_ALL_TABLES',
    #             'charset': 'utf8mb4'
    #         },
    #     }
    # }
    # DATABASES = {
    #     'default': {
    #         'ENGINE': 'django.db.backends.postgresql',
    #         'NAME': '',
    #         'USER': '',
    #         'PASSWORD': '',
    #         'HOST': '127.0.0.1',
    #         'PORT': '5432',
    #     }
    # }
    DATABASES = {
        'default': {
            'ENGINE': 'django.db.backends.sqlite3',
            'NAME': BASE_DIR / 'db.sqlite3',
        }
    }
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
    MEDIA_ROOT = os.path.join(BASE_DIR, 'media')

CSRF_TRUSTED_ORIGINS = ['http://62.3.41.209:8000', 'https://62.3.41.209:8000', 'http://127.0.0.1:8000']


# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
# SESSION_COOKIE_SECURE = True
# CSRF_COOKIE_SECURE = True
# SECURE_SSL_REDIRECT = True

AUTH_USER_MODEL = "account.USER"

X_FRAME_OPTIONS = 'ALLOW-FROM 127.0.0.1'

customColorPalette = [
	{
		'color': 'hsl(4, 90%, 58%)',
		'label': 'Red'
	},
	{
		'color': 'hsl(340, 82%, 52%)',
		'label': 'Pink'
	},
	{
		'color': 'hsl(291, 64%, 42%)',
		'label': 'Purple'
	},
	{
		'color': 'hsl(262, 52%, 47%)',
		'label': 'Deep Purple'
	},
	{
		'color': 'hsl(231, 48%, 48%)',
		'label': 'Indigo'
	},
	{
		'color': 'hsl(207, 90%, 54%)',
		'label': 'Blue'
	},
]
# CKEDITOR_5_CUSTOM_CSS = 'path_to.css' # optional
# CKEDITOR_5_FILE_STORAGE = "path_to_storage.CustomStorage" # optional
CKEDITOR_5_FILE_UPLOAD_PERMISSION = "staff"  # Possible values: "staff", "authenticated", "any"
# Define a constant in settings.py to specify the custom upload file view
# CK_EDITOR_5_UPLOAD_FILE_VIEW_NAME = "custom_upload_file"
CKEDITOR_5_MAX_FILE_SIZE = 5 # Max size in MB
CKEDITOR_5_IMAGE_BACKEND = 'pillow'  # برای پردازش تصاویر از پکیج pillow استفاده کنید
CKEDITOR_5_UPLOAD_PATH = "upload/"   # مسیر آپلود تصاویر
CKEDITOR_5_RESTRICT_BY_USER = True   # محدودیت آپلود توسط کاربر
CKEDITOR_5_BASEPATH = "/static/ckeditor/ckeditor/"  # مسیر استاتیک کیندر
CKEDITOR_5_FILENAME_GENERATOR = 'utils.get_filename'
# تنظیمات فشرده‌سازی تصاویر
CKEDITOR_5_FORCE_JPEG_COMPRESSION = True
CKEDITOR_5_IMAGE_QUALITY = 50

CKEDITOR_5_CONFIGS = {
    'default': {
        'toolbar': ['heading', '|', 'bold', 'italic', 'link',
                    'bulletedList', 'numberedList', 'blockQuote', 'imageUpload', ],

    },
    'extends': {
        'blockToolbar': [
            'paragraph', 'heading1', 'heading2', 'heading3',
            '|',
            'bulletedList', 'numberedList',
            '|',
            'blockQuote',
        ],
        'toolbar': ['heading', '|', 'outdent', 'indent', '|', 'bold', 'italic', 'link', 'underline', 'strikethrough',
        'code','subscript', 'superscript', 'highlight', '|', 'codeBlock', 'sourceEditing', 'insertImage',
                    'bulletedList', 'numberedList', 'todoList', '|',  'blockQuote', 'imageUpload', '|',
                    'fontSize', 'fontFamily', 'fontColor', 'fontBackgroundColor', 'mediaEmbed', 'removeFormat',
                    'insertTable',],
        'image': {
            'toolbar': ['imageTextAlternative', '|', 'imageStyle:alignLeft',
                        'imageStyle:alignRight', 'imageStyle:alignCenter', 'imageStyle:side',  '|'],
            'styles': [
                'full',
                'side',
                'alignLeft',
                'alignRight',
                'alignCenter',
            ]

        },
        'table': {
            'contentToolbar': [ 'tableColumn', 'tableRow', 'mergeTableCells',
            'tableProperties', 'tableCellProperties' ],
            'tableProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            },
            'tableCellProperties': {
                'borderColors': customColorPalette,
                'backgroundColors': customColorPalette
            }
        },
        'heading' : {
            'options': [
                { 'model': 'paragraph', 'title': 'Paragraph', 'class': 'ck-heading_paragraph' },
                { 'model': 'heading1', 'view': 'h1', 'title': 'Heading 1', 'class': 'ck-heading_heading1' },
                { 'model': 'heading2', 'view': 'h2', 'title': 'Heading 2', 'class': 'ck-heading_heading2' },
                { 'model': 'heading3', 'view': 'h3', 'title': 'Heading 3', 'class': 'ck-heading_heading3' }
            ]
        }
    },
    'list': {
        'properties': {
            'styles': 'true',
            'startIndex': 'true',
            'reversed': 'true',
        }
    }
}


# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    # Extension
    'django_render_partial',
    'django_ckeditor_5',
    "extensions",
    # 'django.contrib.sitemaps',
    # 'django.contrib.sites',
    'widget_tweaks',
    
    # Added Application
    "account.apps.AccountConfig",
    "application.apps.ApplicationConfig",
    # 'map_xml.apps.MapXmlConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'config.middleware.RedirectMiddleware',
]

ROOT_URLCONF = 'config.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR, 'templates/', os.path.join(BASE_DIR, "templates/")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'config.wsgi.application'


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'fa-ir'

TIME_ZONE = 'Asia/Tehran'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATICFILES_DIRS = [
    BASE_DIR / 'assets',
]

STATIC_URL = '/static/'
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

SITE_ID = 1

# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# DEFAULT_FROM_EMAIL = 'myemain@myemain.ir',
# EMAIL_HOST = 'mail.myemain.ir'
# EMAIL_USE_TLS = False
# EMAIL_PORT = 25
# EMAIL_HOST_USER = 'myemain'
# EMAIL_HOST_PASSWORD = ''